CREATE TABLE users(id VARCHAR(30) PRIMARY KEY, password VARCHAR(255) NOT NULL, name VARCHAR(20) NOT NULL, email VARCHAR(30) NOT NULL, telephone VARCHAR(20) NOT NULL, created_at DATETIME NOT NULL DEFAULT now());

CREATE TABLE movies(movie_id INT AUTO_INCREMENT PRIMARY KEY, poster_image VARCHAR(255) NOT NULL, title VARCHAR(100) UNIQUE, summary TEXT NOT NULL, running_time INT NOT NULL, age_limit VARCHAR(3) NOT NULL, released_date DATETIME NOT NULL);

CREATE TABLE movieSchedule(movie_time_id INT AUTO_INCREMENT PRIMARY KEY, title VARCHAR(100) NOT NULL, room_id INT NOT NULL, start_time DATETIME NOT NULL, end_time DATETIME NOT NULL, ordered_seat_count INT NOT NULL DEFAULT 0 CHECK (ordered_seat_count <= 100), FOREIGN KEY (title) REFERENCES movies(title) ON DELETE RESTRICT ON UPDATE CASCADE);

CREATE TABLE orders(order_id INT AUTO_INCREMENT PRIMARY KEY, user_id VARCHAR(50) NOT NULL, movie_time_id INT NOT NULL, seat_count INT NOT NULL, price INT NOT NULL, created_at DATETIME NOT NULL DEFAULT now(), canceled_at DATETIME NULL, FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (movie_time_id) REFERENCES movieSchedule(movie_time_id) ON DELETE RESTRICT ON UPDATE CASCADE);

CREATE TABLE personTypes(person_type VARCHAR(10) PRIMARY KEY, price INT NOT NULL);

CREATE TABLE orderedSeats(ordered_seat_id INT PRIMARY KEY AUTO_INCREMENT, order_id INT NOT NULL, seat_row CHAR(1) NOT NULL, seat_col INT NOT NULL, person_type VARCHAR(10) NOT NULL, FOREIGN KEY (order_id) REFERENCES orders(order_id) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (person_type) REFERENCES personTypes(person_type) ON DELETE CASCADE ON UPDATE CASCADE);


INSERT INTO personTypes VALUES('teenager', 13000);
INSERT INTO personTypes VALUES('adult', 15000);
INSERT INTO personTypes VALUES('senior', 11000);